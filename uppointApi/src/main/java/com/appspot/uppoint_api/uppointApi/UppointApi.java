/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-03 at 21:29:19 UTC 
 * Modify at your own risk.
 */

package com.appspot.uppoint_api.uppointApi;

/**
 * Service definition for UppointApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UppointApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class UppointApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the Uppoint API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://uppoint-api.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "uppointApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public UppointApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  UppointApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Client collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code UppointApi uppointApi = new UppointApi(...);}
   *   {@code UppointApi.Client.List request = uppointApi.client().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Client client() {
    return new Client();
  }

  /**
   * The "client" collection of methods.
   */
  public class Client {

    /**
     * Create a request for the method "client.getSearchResults".
     *
     * This request holds the parameters needed by the uppointApi server.  After setting any optional
     * parameters, call the {@link GetSearchResults#execute()} method to invoke the remote operation.
     *
     * @param cityKey
     * @param countryKey
     * @param end
     * @param professionKey
     * @param serviceTypeKey
     * @param start
     * @return the request
     */
    public GetSearchResults getSearchResults(java.lang.String cityKey, java.lang.String countryKey, java.lang.Long end, java.lang.String professionKey, java.lang.String serviceTypeKey, java.lang.Long start) throws java.io.IOException {
      GetSearchResults result = new GetSearchResults(cityKey, countryKey, end, professionKey, serviceTypeKey, start);
      initialize(result);
      return result;
    }

    public class GetSearchResults extends UppointApiRequest<com.appspot.uppoint_api.uppointApi.model.SearchResults> {

      private static final String REST_PATH = "client/search";

      /**
       * Create a request for the method "client.getSearchResults".
       *
       * This request holds the parameters needed by the the uppointApi server.  After setting any
       * optional parameters, call the {@link GetSearchResults#execute()} method to invoke the remote
       * operation. <p> {@link GetSearchResults#initialize(com.google.api.client.googleapis.services.Abs
       * tractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param cityKey
       * @param countryKey
       * @param end
       * @param professionKey
       * @param serviceTypeKey
       * @param start
       * @since 1.13
       */
      protected GetSearchResults(java.lang.String cityKey, java.lang.String countryKey, java.lang.Long end, java.lang.String professionKey, java.lang.String serviceTypeKey, java.lang.Long start) {
        super(UppointApi.this, "GET", REST_PATH, null, com.appspot.uppoint_api.uppointApi.model.SearchResults.class);
        this.cityKey = com.google.api.client.util.Preconditions.checkNotNull(cityKey, "Required parameter cityKey must be specified.");
        this.countryKey = com.google.api.client.util.Preconditions.checkNotNull(countryKey, "Required parameter countryKey must be specified.");
        this.end = com.google.api.client.util.Preconditions.checkNotNull(end, "Required parameter end must be specified.");
        this.professionKey = com.google.api.client.util.Preconditions.checkNotNull(professionKey, "Required parameter professionKey must be specified.");
        this.serviceTypeKey = com.google.api.client.util.Preconditions.checkNotNull(serviceTypeKey, "Required parameter serviceTypeKey must be specified.");
        this.start = com.google.api.client.util.Preconditions.checkNotNull(start, "Required parameter start must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSearchResults setAlt(java.lang.String alt) {
        return (GetSearchResults) super.setAlt(alt);
      }

      @Override
      public GetSearchResults setFields(java.lang.String fields) {
        return (GetSearchResults) super.setFields(fields);
      }

      @Override
      public GetSearchResults setKey(java.lang.String key) {
        return (GetSearchResults) super.setKey(key);
      }

      @Override
      public GetSearchResults setOauthToken(java.lang.String oauthToken) {
        return (GetSearchResults) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSearchResults setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSearchResults) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSearchResults setQuotaUser(java.lang.String quotaUser) {
        return (GetSearchResults) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSearchResults setUserIp(java.lang.String userIp) {
        return (GetSearchResults) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String cityKey;

      /**

       */
      public java.lang.String getCityKey() {
        return cityKey;
      }

      public GetSearchResults setCityKey(java.lang.String cityKey) {
        this.cityKey = cityKey;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String countryKey;

      /**

       */
      public java.lang.String getCountryKey() {
        return countryKey;
      }

      public GetSearchResults setCountryKey(java.lang.String countryKey) {
        this.countryKey = countryKey;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long end;

      /**

       */
      public java.lang.Long getEnd() {
        return end;
      }

      public GetSearchResults setEnd(java.lang.Long end) {
        this.end = end;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String professionKey;

      /**

       */
      public java.lang.String getProfessionKey() {
        return professionKey;
      }

      public GetSearchResults setProfessionKey(java.lang.String professionKey) {
        this.professionKey = professionKey;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String serviceTypeKey;

      /**

       */
      public java.lang.String getServiceTypeKey() {
        return serviceTypeKey;
      }

      public GetSearchResults setServiceTypeKey(java.lang.String serviceTypeKey) {
        this.serviceTypeKey = serviceTypeKey;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long start;

      /**

       */
      public java.lang.Long getStart() {
        return start;
      }

      public GetSearchResults setStart(java.lang.Long start) {
        this.start = start;
        return this;
      }

      @Override
      public GetSearchResults set(String parameterName, Object value) {
        return (GetSearchResults) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Users collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code UppointApi uppointApi = new UppointApi(...);}
   *   {@code UppointApi.Users.List request = uppointApi.users().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Users users() {
    return new Users();
  }

  /**
   * The "users" collection of methods.
   */
  public class Users {

    /**
     * Create a request for the method "users.getByEmail".
     *
     * This request holds the parameters needed by the uppointApi server.  After setting any optional
     * parameters, call the {@link GetByEmail#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public GetByEmail getByEmail(java.lang.String email) throws java.io.IOException {
      GetByEmail result = new GetByEmail(email);
      initialize(result);
      return result;
    }

    public class GetByEmail extends UppointApiRequest<com.appspot.uppoint_api.uppointApi.model.ProUserPayload> {

      private static final String REST_PATH = "users/{email}";

      /**
       * Create a request for the method "users.getByEmail".
       *
       * This request holds the parameters needed by the the uppointApi server.  After setting any
       * optional parameters, call the {@link GetByEmail#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetByEmail#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected GetByEmail(java.lang.String email) {
        super(UppointApi.this, "GET", REST_PATH, null, com.appspot.uppoint_api.uppointApi.model.ProUserPayload.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetByEmail setAlt(java.lang.String alt) {
        return (GetByEmail) super.setAlt(alt);
      }

      @Override
      public GetByEmail setFields(java.lang.String fields) {
        return (GetByEmail) super.setFields(fields);
      }

      @Override
      public GetByEmail setKey(java.lang.String key) {
        return (GetByEmail) super.setKey(key);
      }

      @Override
      public GetByEmail setOauthToken(java.lang.String oauthToken) {
        return (GetByEmail) super.setOauthToken(oauthToken);
      }

      @Override
      public GetByEmail setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetByEmail) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetByEmail setQuotaUser(java.lang.String quotaUser) {
        return (GetByEmail) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetByEmail setUserIp(java.lang.String userIp) {
        return (GetByEmail) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public GetByEmail setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public GetByEmail set(String parameterName, Object value) {
        return (GetByEmail) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.insert".
     *
     * This request holds the parameters needed by the uppointApi server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public Insert insert(java.lang.String email) throws java.io.IOException {
      Insert result = new Insert(email);
      initialize(result);
      return result;
    }

    public class Insert extends UppointApiRequest<com.appspot.uppoint_api.uppointApi.model.ProUserPayload> {

      private static final String REST_PATH = "users/{email}";

      /**
       * Create a request for the method "users.insert".
       *
       * This request holds the parameters needed by the the uppointApi server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected Insert(java.lang.String email) {
        super(UppointApi.this, "POST", REST_PATH, null, com.appspot.uppoint_api.uppointApi.model.ProUserPayload.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Insert setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.sync".
     *
     * This request holds the parameters needed by the uppointApi server.  After setting any optional
     * parameters, call the {@link Sync#execute()} method to invoke the remote operation.
     *
     * @param proUserKey
     * @param content the {@link com.appspot.uppoint_api.uppointApi.model.SyncPayload}
     * @return the request
     */
    public Sync sync(java.lang.String proUserKey, com.appspot.uppoint_api.uppointApi.model.SyncPayload content) throws java.io.IOException {
      Sync result = new Sync(proUserKey, content);
      initialize(result);
      return result;
    }

    public class Sync extends UppointApiRequest<com.appspot.uppoint_api.uppointApi.model.SyncPayload> {

      private static final String REST_PATH = "users/{proUserKey}/sync";

      /**
       * Create a request for the method "users.sync".
       *
       * This request holds the parameters needed by the the uppointApi server.  After setting any
       * optional parameters, call the {@link Sync#execute()} method to invoke the remote operation. <p>
       * {@link Sync#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param proUserKey
       * @param content the {@link com.appspot.uppoint_api.uppointApi.model.SyncPayload}
       * @since 1.13
       */
      protected Sync(java.lang.String proUserKey, com.appspot.uppoint_api.uppointApi.model.SyncPayload content) {
        super(UppointApi.this, "PUT", REST_PATH, content, com.appspot.uppoint_api.uppointApi.model.SyncPayload.class);
        this.proUserKey = com.google.api.client.util.Preconditions.checkNotNull(proUserKey, "Required parameter proUserKey must be specified.");
      }

      @Override
      public Sync setAlt(java.lang.String alt) {
        return (Sync) super.setAlt(alt);
      }

      @Override
      public Sync setFields(java.lang.String fields) {
        return (Sync) super.setFields(fields);
      }

      @Override
      public Sync setKey(java.lang.String key) {
        return (Sync) super.setKey(key);
      }

      @Override
      public Sync setOauthToken(java.lang.String oauthToken) {
        return (Sync) super.setOauthToken(oauthToken);
      }

      @Override
      public Sync setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Sync) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Sync setQuotaUser(java.lang.String quotaUser) {
        return (Sync) super.setQuotaUser(quotaUser);
      }

      @Override
      public Sync setUserIp(java.lang.String userIp) {
        return (Sync) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String proUserKey;

      /**

       */
      public java.lang.String getProUserKey() {
        return proUserKey;
      }

      public Sync setProUserKey(java.lang.String proUserKey) {
        this.proUserKey = proUserKey;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String timestamp;

      /**

       */
      public java.lang.String getTimestamp() {
        return timestamp;
      }

      public Sync setTimestamp(java.lang.String timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @Override
      public Sync set(String parameterName, Object value) {
        return (Sync) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link UppointApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link UppointApi}. */
    @Override
    public UppointApi build() {
      return new UppointApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UppointApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUppointApiRequestInitializer(
        UppointApiRequestInitializer uppointapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(uppointapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
